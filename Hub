--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.5b) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==4) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (3==v0) then v10=setmetatable;v11=pcall;v12=select;v0=4;end if (2==v0) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==5) then function v15(v16,v17)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==0) then v19=1;v20=nil;v16=v5(v4(v16,5),"..",function(v31)if (v2(v31,2)==79) then local v65=0;while true do if (v65==0) then v20=v1(v4(v31,1,1));return "";end end else local v66=v3(v1(v31,16));if v20 then local v76=0;local v77;while true do if (v76==0) then v77=v6(v66,v20);v20=nil;v76=1;end if (v76==1) then return v77;end end else return v66;end end end);v21=nil;v18=1;end if (v18==3) then function v25()local v39=v24();local v40=v24();return (( -(2 -0) * v21(v40,(179 -114) -33)) + (632 -(597 + 34))) * (2^(v21(v40,(1764 -(742 + 1020)) + (183 -(73 + 91)),28 + 3) -(1004 + 19))) * ((((v21(v40,1297 -(587 + (3487 -2778)),27 -7) * ((6 -4)^(1956 -(96 + 1828)))) + v39)/((660 -(378 + 280))^(1128 -(64 + 1012)))) + 1);end v26=nil;function v26(v32)local v41;if  not v32 then v32=v24();if (v32==(0 -0)) then return "";end end v41=v4(v16,v19,(v19 + v32) -(2 -1));v19=v19 + v32;local v42={};for v63=1 + 0, #v41 do v42[v63]=v3(v2(v4(v41,v63,v63)));end return v7(v42);end v27=v24;v18=4;end if (1==v18) then function v21(v33,v34,v35)if v35 then local v67=0 + 0;local v68;while true do if (v67==(0 -0)) then v68=(v33/((2 + 0)^(v34-(1 -(25 -(12 + 13))))))%((5 -(1 + 2))^(((v35-1) -(v34-(1 -0))) + ((643 -351) -(53 + (1714 -(168 + 1308))))));return v68-(v68%(1748 -(617 + 1130)));end end else local v69=0;local v70;while true do if (v69==(0 + 0)) then v70=(1 + 1)^(v34-(1954 -(1532 + 421)));return (((v33%(v70 + v70))>=v70) and 1) or (0 -0);end end end end v22=nil;function v22()local v43=0;local v44;while true do if (v43==(1622 -(614 + 1007))) then return v44;end if (((0 + 0) -0)==v43) then v44=v2(v16,v19,v19);v19=v19 + ((4177 -2608) -(829 + 739));v43=1240 -(908 + 331);end end end v23=nil;v18=2;end if (v18==4) then v28=nil;function v28(...)return {...},v12("#",...);end v29=nil;function v29()local v45=0;local v46;local v47;local v48;local v49;local v50;local v51;local v52;while true do if (v45==0) then v46=0;v47=nil;v45=1;end if (v45~=1) then else v48=nil;v49=nil;v45=1945 -(802 + 1141);end if (v45==(1167 -(334 + 831))) then v50=nil;v51=nil;v45=3;end if (v45==3) then v52=nil;while true do local v78=1473 -(268 + 1205);while true do if (1==v78) then if ((0 -0)==v46) then local v96=0;while true do if (v96==(1799 -(1162 + 637))) then v47={};v48={};v96=2 -1;end if ((1590 -(55 + 1533))==v96) then v46=1 + 0;break;end if (v96~=(182 -(88 + 93))) then else v49={};v50={v47,v48,nil,v49};v96=2;end end end break;end if (v78==0) then if (v46~=2) then else for v99=1050 -(647 + 402),v24() do local v100=0;local v101;local v102;while true do if (v100==(0 + 0)) then v101=0;v102=nil;v100=1 + 0;end if (v100~=(1 + 0)) then else while true do if (v101~=0) then else v102=v22();if (v21(v102,1,1)~=(0 + 0)) then else local v110=0;local v111;local v112;local v113;local v114;while true do if (v110==(0 + 0)) then local v145=0;while true do if ((3 -2)~=v145) then else v110=1;break;end if (v145==(0 + 0)) then v111=0;v112=nil;v145=1;end end end if (v110~=1) then else v113=nil;v114=nil;v110=1429 -(321 + 1106);end if (v110==(1797 -(1116 + 679))) then while true do if (v111==(878 -(187 + 688))) then if (v21(v113,3,3)==(3 -2)) then v114[4]=v52[v114[4]];end v47[v99]=v114;break;end if (v111==0) then local v173=0;local v174;local v175;while true do if (v173==0) then v174=0 -0;v175=nil;v173=1 -0;end if (v173==1) then while true do if (v174~=0) then else v175=0 -0;while true do if (v175==(2 -1)) then v111=1;break;end if (v175==0) then v112=v21(v102,2,3);v113=v21(v102,4,3 + 3);v175=1;end end break;end end break;end end end if (v111==(1 + 1)) then local v176=0;while true do if (v176==(2 -1)) then v111=3 + 0;break;end if ((0 + 0)~=v176) then else if (v21(v113,12 -(10 + 1),1 -0)~=(1 + 0)) then else v114[2]=v52[v114[2]];end if (v21(v113,2,2)==1) then v114[3]=v52[v114[609 -(252 + 354)]];end v176=2 -1;end end end if (v111==(4 -3)) then local v177=522 -(204 + 318);local v178;local v179;while true do if (v177~=(1 + 0)) then else while true do if (v178==0) then v179=0 + 0;while true do if (v179==1) then v111=2;break;end if (v179~=(0 + 0)) then else v114={v23(),v23(),nil,nil};if (v112==0) then local v234=0;local v235;local v236;local v237;while true do if (v234==(0 -0)) then v235=0 + 0;v236=nil;v234=2 -1;end if (v234==(1617 -(23 + 1593))) then v237=nil;while true do if (v235~=1) then else while true do if (v236==(0 -0)) then v237=0;while true do if ((1872 -(925 + 947))==v237) then v114[10 -7]=v23();v114[6 -2]=v23();break;end end break;end end break;end if (v235~=(0 + 0)) then else v236=0 -0;v237=nil;v235=1;end end break;end end elseif (v112==(2 -1)) then v114[1568 -(1209 + 356)]=v24();elseif (v112==2) then v114[1 + 2]=v24() -((3 -1)^(66 -50));elseif (v112~=(437 -(38 + 396))) then else local v254=0;local v255;local v256;while true do if (v254==(0 -0)) then v255=0;v256=nil;v254=1;end if (1~=v254) then else while true do if (v255~=(0 -0)) then else v256=1419 -(342 + 1077);while true do if (v256~=0) then else v114[1100 -(176 + 921)]=v24() -(2^(3 + 13));v114[4]=v23();break;end end break;end end break;end end end v179=1 + 0;end end break;end end break;end if (v177==0) then v178=0 -0;v179=nil;v177=1;end end end end break;end end end break;end end break;end end end for v103=1 + 0,v24() do v48[v103-1]=v29();end for v105=1766 -(761 + 1004),v24() do v49[v105]=v24();end return v50;end if (v46==1) then local v97=0 -0;local v98;while true do if (v97==0) then v98=0;while true do if (v98==1) then local v108=0;while true do if (v108==(1287 -(85 + 1202))) then for v116=1,v51 do local v117=0;local v118;local v119;local v120;local v121;while true do if (v117~=(1 -0)) then else v120=nil;v121=nil;v117=1 + 1;end if (v117~=(2 + 0)) then else while true do if (v118~=(0 -0)) then else local v181=844 -(557 + 287);while true do if (v181==0) then local v196=217 -(11 + 206);while true do if (v196~=(486 -(351 + 134))) then else v181=1;break;end if (v196==0) then v119=1978 -(76 + 1902);v120=nil;v196=1842 -(1217 + 624);end end end if (v181~=1) then else v118=1 -0;break;end end end if (v118==1) then v121=nil;while true do if (v119==0) then local v197=0 -0;local v198;while true do if (0==v197) then v198=0 -0;while true do if (v198==0) then local v231=0;while true do if (v231~=1) then else v198=1 + 0;break;end if (v231==0) then v120=v22();v121=nil;v231=1 + 0;end end end if (v198==(1612 -(119 + 1492))) then v119=1 -0;break;end end break;end end end if (1==v119) then if (v120==1) then v121=v22()~=0;elseif (v120==(664 -(601 + 61))) then v121=v25();elseif (v120~=3) then else v121=v26();end v52[v116]=v121;break;end end break;end end break;end if (v117==0) then v118=0;v119=nil;v117=3 -2;end end end v50[3 + 0]=v22();v108=1;end if (v108==1) then v98=2;break;end end end if (v98~=0) then else local v109=672 -(177 + 495);while true do if (v109==(1200 -(767 + 432))) then v98=2 -1;break;end if (v109==(996 -(99 + 897))) then v51=v24();v52={};v109=2 -1;end end end if (v98~=(669 -(462 + 205))) then else v46=4 -2;break;end end break;end end end v78=1;end end end break;end end end v18=5;end if (v18==5) then v30=nil;function v30(v36,v37,v38)local v53=v36[1];local v54=v36[2];local v55=v36[3];return function(...)local v71=1;local v72= -1;local v73={...};local v74=v12("#",...) -1;local function v75()local v79=v53;local v80=Const;local v81=v54;local v82=v55;local v83=v28;local v84={};local v85={};local v86={};for v91=0,v74 do if (((3915 -(1211 + 640))<=(174 + 522 + 95 + 1307)) and (v91>=v82)) then v84[v91-v82]=v73[v91 + 1];else v86[v91]=v73[v91 + 1 + 0];end end local v87=(v74-v82) + (1 -(0 -0));local v88;local v89;while true do local v92=0;local v93;while true do if (((246 -137)==(1270 -(1144 + 17))) and (v92==(0 + 0))) then v93=0 + 0;while true do if ((v93==(391 -(168 + 222))) or ((6840 -5370)>1895)) then if ((((2180 + 574) -(203 + (889 -(55 + 27))))<=(4016 -(129 + 154))) and (v89<=(1652 -(909 + 310 + 422)))) then if (((12506 -8298)>(3160 -(49 + 508))) and (v89<=(2 + 3))) then if ((v89<=(78 -(23 + 53))) or ((2488 -(493 + 263))==((5316 -(691 + 1080)) -(55 + 104)))) then if ((v89<=0) or ((1319 -(499 + 695))>3713)) then local v122=0 + 0;local v123;local v124;local v125;local v126;while true do if ((v122==(0 -0)) or ((14 + 4571)>4815)) then v123=0 + 0;v124=nil;v122=408 -(371 + 36);end if ((v122==(5 -3)) or (580==((21588 -17008) -(689 + 333)))) then while true do if (((1901 -839)==(1825 -(247 + 516))) and (v123==(1 -0))) then v126=nil;while true do if (((5205 -2190)<=(5848 -(1980 + 12))) and (v124==((1131 -(106 + 520)) -(273 + 231)))) then v86[v125 + 1]=v126;v86[v125]=v126[v88[(1953 -(40 + 61)) -(805 + 1043)]];break;end if ((v124==0) or ((1296 -1018)>(2318 + 1875))) then local v202=0 + 0;local v203;while true do if ((v202==(0 + 0)) or ((21 + 429)>=(765 + 3708))) then v203=0;while true do if ((v203==(1 -0)) or ((5961 -(1356 + 353))==(1197 -(398 + 27 + 230)))) then v124=1 + 0;break;end if ((v203==(0 + 0)) or ((1535 -(1453 + 30))>=2416)) then local v232=0;while true do if (((0 + 0 + 0)==v232) or ((4545 -(5 + 261 + 36))<=(4268 -2653))) then v125=v88[2 + 0];v126=v86[v88[(1971 -(1265 + 702)) -1]];v232=1;end if ((v232==(795 -((1360 -969) + 403))) or ((8950 -4679)<=(4892 -(257 + 1552)))) then v203=1 + 0;break;end end end end break;end end end end break;end if (((2404 -(189 + 768))<(6557 -4222)) and (v123==(1361 -(1013 + 348)))) then local v182=0 + 0;while true do if (((1824 -(1303 + 417))<=(7761 -4954)) and (v182==1)) then v123=2 -1;break;end if (((1824 -(1049 + 775))==v182) or ((495 + 2669)==(5078 -(498 + 847)))) then v124=1777 -((760 -366) + 1383);v125=nil;v182=1 + 0;end end end end break;end if ((1102<(2250 -(79 + 438))) and (v122==(1 + 0))) then v125=nil;v126=nil;v122=7 -5;end end elseif ((v89==(209 -(118 + 90))) or ((11746 -9344)>=(3985 -(294 + 234)))) then local v146=0 + 0;local v147;local v148;while true do if (((4843 -(464 + 942))>(3853 -(473 + 93))) and (((1850 -(1373 + 474)) -2)==v146)) then while true do if (((1283 + 942)<=2395) and (v147==(708 -(135 + 573)))) then v148=v88[2];v86[v148]=v86[v148](v13(v86,v148 + (2 -1),v72));break;end end break;end if ((((1075 -(467 + 608)) -0)==v146) or (((2917 -1734) -(41 + 824))==(5091 -(669 + 1311)))) then local v180=0 + 0;while true do if (((6706 -2798)>=(768 -(475 + 251))) and (v180==0)) then v147=0 -0;v148=nil;v180=1 + 0;end if ((v180==(195 -(55 + 139))) or ((947 -(174 + 123 + 291))==(1801 + 1886))) then v146=1 -(55 -(10 + 45));break;end end end end else v86[v88[2]]=v88[642 -(406 + 233)]~=(0 -0);end elseif ((v89<=(5 -2)) or (((4123 -(21 + 875)) -(314 + 1053))<(774 -468))) then local v127=0 -0;local v128;local v129;local v130;local v131;while true do if (((22 -(9 + 13))==v127) or ((12811 -8144)<(125 + 281 + 501))) then local v169=0;while true do if (((4479 -3396)>(2820 -(1466 + 402))) and (v169==(1123 -(27 + 1095)))) then v127=1;break;end if (((1866 -1240)>=(94 -23)) and (v169==(0 -(1330 -(44 + 1286))))) then v128=0 + (0 -0);v129=nil;v169=1 -0;end end end if (((163 + 39)<(5819 -1861)) and (v127==(2 -0))) then while true do if ((1563==(2908 -(1001 + 344))) and (v128==0)) then local v183=0 + 0;while true do if ((v183==(876 -(140 + 735))) or ((2516 -(211 + 85 + 116))<1679)) then v128=1 -0;break;end if (((73 + 3440)<=3997) and (v183==(0 -0))) then local v204=0 + 0;while true do if (((977 + 1275)==(269 + 1983)) and ((1330 -(32 + 1298))==v204)) then v129=v81[v88[588 -(176 + 409)]];v130=nil;v204=1 + 0;end if ((v204==(1 + 0)) or ((520 + 340)>=(9643 -7204))) then v183=1 + 0;break;end end end end end if (((389 + 762 + 3400)>=(86 + 195)) and (v128==(1526 -(99 + 1426)))) then local v184=0 + 0;while true do if (((571 + 925)<=(1042 + 168 + 994)) and ((1 + 0)==v184)) then v128=1 + 1;break;end if ((v184==(1641 -((1707 -(214 + 234)) + 382))) or ((1635 -(461 + 261))>=((17991 -14270) -2192))) then local v205=0 -0;while true do if (((2886 -1227)<((7661 -4804) -(32 + 308))) and (v205==1)) then v184=723 -(413 + 309);break;end if ((v205==(112 -(19 + 93))) or ((4010 -(410 + 514))==(4044 -2777))) then v131={};v130=v10({},{__index=function(v220,v221)local v226=0 -0;local v227;while true do if ((4007<=(17712 -13124)) and (v226==(412 -(315 + 97)))) then local v241=1742 -(78 + 1664);while true do if (((573 + 1420)<=(2605 + 2207)) and (v241==(1510 -(536 + 974)))) then v227=v131[v221];return v227[4 -3][v227[2 -0]];end end end end end,__newindex=function(v222,v223,v224)local v228=0 + 0;local v229;while true do if (((6546 -4106)<(4434 -(415 + 312))) and (v228==(0 -0))) then v229=v131[v223];v229[3 -2][v229[2 -0]]=v224;break;end end end});v205=1;end end end end end if ((v128==(2 + 0)) or ((3034 -(709 + 98))==(2716 -(197 + 1249)))) then for v188=1 -0,v88[938 -(777 + 157)] do local v189=746 -(236 + 510);local v190;local v191;local v192;while true do if ((v189==(1 + 0)) or (1020>=4763)) then v192=nil;while true do if (((3895 -(577 + 146))==(15768 -12596)) and (v190==(246 -(6 + 239)))) then while true do if ((v191==(1 -0)) or ((1265 + (5052 -2979))>(8229 -4323))) then if (((2842 + 624)>=((4215 -(606 + 287)) -1114)) and (v192[1 -0]==(50 -31))) then v131[v188-(1 -0)]={v86,v192[1332 -(492 + 837)]};else v131[v188-((498 + 1104) -((1703 -(1327 + 240)) + (2591 -(184 + 942))))]={v37,v192[4 -1]};end v85[ #v85 + 1 + 0 + 0]=v131;break;end if (((0 + 0)==v191) or ((2961 + 494)<1061)) then local v239=520 -(212 + 308);while true do if (((692 + 2323)<(18015 -13484)) and (v239==(0 + 0))) then v71=v71 + 1 + 0;v192=v79[v71];v239=(3398 -(1653 + 267)) -(1028 + 449);end if ((v239==(894 -(518 + 375))) or (((7863 -(49 + 811)) -2810)<1390)) then v191=1 + 0;break;end end end end break;end if (((0 + 0)==v190) or (((659 + 2185) -(285 + (2292 -(678 + 115))))==(3071 -((4168 -2416) + 83)))) then local v225=0 -0;while true do if ((2714<=(504 + 2836)) and (v225==(1 + 0))) then v190=3 -2;break;end if ((v225==((0 -0) -0)) or (3623<(3 + 1190))) then v191=0;v192=nil;v225=1 + 0;end end end end break;end if ((1616<((8524 -(361 + 724)) -4477)) and (v189==(0 + 0 + 0))) then v190=994 -(248 + 746);v191=nil;v189=2 -1;end end end v86[v88[710 -(83 + 625)]]=v30(v129,v130,v38);break;end end break;end if ((v127==(3 -2)) or ((128 + 1182)>=(4787 -(1283 + (23 -(7 + 4)))))) then v130=nil;v131=nil;v127=2;end end elseif (((20 + 125)==(123 + 22)) and (v89>(4 + 0))) then v86[v88[2]]=v38[v88[3 + 0]];else v71=v88[2 + 1];end elseif ((2993==(3733 -(60 + 680))) and (v89<=(37 -29))) then if ((v89<=((3 + 20) -17)) or ((586 -(82 + 447))>=(142 -65))) then v86[v88[(373 -(61 + 311)) + (76 -(56 + 19))]][v88[3]]=v86[v88[(1 + 10) -7]];elseif ((v89==(30 -(12 + 11))) or (1417>(7270 -4242))) then local v151=1301 -(15 + 1286);local v152;local v153;while true do if ((4056>=(2658 -(309 + 969))) and (v151==(1 + 0))) then while true do if ((v152==0) or ((407 + 137)>=(905 + 1291))) then v153=v88[(568 -(262 + 305)) + 1];v86[v153]=v86[v153]();break;end end break;end if ((v151==(0 + 0)) or ((2337 + 315)==(3233 + 999))) then v152=1243 -(186 + 1057);v153=nil;v151=1 -(0 -0);end end else v86[v88[406 -(345 + 59)]]=v88[3 + 0];end elseif (((7300 -4298)>=1815) and (v89<=(163 -(146 + 8)))) then local v133=0 + (0 -0);local v134;local v135;while true do if (((14705 -9749)==(18480 -13524)) and (v133==(1112 -(436 + 675)))) then while true do if (((2978 -(61 + 687))==(9097 -6867)) and (v134==(605 -((883 -(80 + 250)) + 52)))) then v135=v88[720 -(39 + (2142 -(1064 + 399)))];v86[v135](v13(v86,v135 + (29 -(5 + (523 -(30 + 470)))),v88[1089 -((1064 -(16 + 8)) + 46)]));break;end end break;end if ((v133==(1115 -(712 + 403))) or ((7795 -4733)<=(80 + 218 + 189))) then v134=1094 -(798 + 296);v135=nil;v133=3 -2;end end elseif ((v89>(1383 -(669 + 704))) or ((8014 -4333)>=(4219 -(33 + 248)))) then local v155=0;local v156;local v157;local v158;local v159;while true do if (((89 + 623)<=(3576 -1763)) and (v155==1)) then v158=nil;v159=nil;v155=8 -6;end if ((v155==(0 + 0)) or ((1018 -620)<135)) then v156=0;v157=nil;v155=1;end if ((4251>=(4505 -(551 + 1070))) and (v155==2)) then while true do if (((2061 + 943)==(3313 -(93 + 216))) and (v156==(304 -(6 + 298)))) then v157=0;v158=nil;v156=1 + 0;end if ((1361>(507 -(296 + 20))) and ((1 + 0)==v156)) then v159=nil;while true do if ((v157==(0 -0)) or (794>=(2923 -1946))) then local v213=0;while true do if ((1==v213) or ((6570 -(278 + 1675))<=(604 + 54))) then v157=1 + 0;break;end if ((v213==(0 -(0 + 0))) or ((1462 -(72 + 36))>=4123)) then local v230=0;while true do if (((8673 -5777)==(2008 + 888)) and (v230==((1882 -(627 + 1252)) -2))) then v213=1 + (1555 -(839 + 716));break;end if ((((275 -(162 + 113)) + 0)==v230) or ((682 + 2490)==(269 + 3846))) then v158=v88[713 -(438 + (733 -(366 + 94)))];v159={};v230=(2 -0) -1;end end end end end if ((v157==(2 -(2 -1))) or ((996 -630)>(2039 -(918 + 503)))) then for v214=1118 -(265 + 852), #v85 do local v215=0 + 0;local v216;local v217;while true do if ((v215==(1 + 0)) or (((16652 -12413) -(99 + 938))<(242 + 2307))) then while true do if (((3953 -(27 + 1522))==2404) and (v216==(1413 -(101 + 1312)))) then v217=v85[v214];for v246=0 + 0, #v217 do local v247=0 -0;local v248;local v249;local v250;local v251;local v252;while true do if ((3171>=(1538 + 895)) and (v247==2)) then v252=nil;while true do if ((v248==(316 -(69 + 246))) or ((4366 -3099)>(9248 -4523))) then local v257=1207 -(309 + (3041 -2143));while true do if (((1 + (993 -(368 + 625)))==v257) or ((644 + 677)==2153)) then v248=7 -5;break;end if ((v257==(1283 -(783 + 500))) or (1862==(269 + 55))) then v251=nil;v252=nil;v257=1411 -(1408 + (243 -(30 + 211)));end end end if ((2470>=(3508 -(1320 + 365))) and (v248==(594 -(577 + 17)))) then v249=0 -0;v250=nil;v248=4 -3;end if ((v248==(3 -1)) or ((1911 + 139)>(3489 -(573 + 341)))) then while true do if (((0 -0)==v249) or ((1118 -(190 + 145))<=(1026 -(30 + 405)))) then local v260=0 -0;local v261;while true do if ((3065>(2239 -(28 + 377))) and (v260==0)) then v261=0;while true do if ((0==v261) or (((914 -565) + 2634)<=(1804 + 13))) then local v266=(2646 -(885 + 830)) -(7 + 924);while true do if (((3144 -(1365 + (786 -490)))<(1780 -(162 + 33))) and (v266==(750 -(585 + 165)))) then v250=v217[v246];v251=v250[904 -(796 + (411 -304))];v266=364 -(157 + 28 + 178);end if ((396<(5311 -(1202 + 6))) and (v266==(1 + 0))) then v261=1 + 0;break;end end end if (((1 + 0 + 0)==v261) or (72>(5617 -4483))) then v249=1 + 0;break;end end break;end end end if (((93 + 294)<=(4911 -(215 + 720))) and (v249==(1 -0))) then v252=v250[2 + 0];if (((v251==v86) and (v252>=v158)) or ((1468 + 3284)<(625 + 2760))) then local v262=0 -0;local v263;while true do if (((5555 -(636 + (4333 -3173)))==3759) and (v262==(0 + 0))) then v263=0 -0;while true do if ((v263==(0 + 0)) or (1378>(2368 + 1566))) then v159[v252]=v251[v252];v250[(1836 -(1447 + 331)) -(6 + (167 -116))]=v159;break;end end break;end end end break;end end break;end end break;end if (((127 -45)==(64 + 18)) and (v247==(352 -(36 + 315)))) then v250=nil;v251=nil;v247=8 -6;end if (((666 + 283)<(5397 -3596)) and (v247==(0 -0))) then v248=0;v249=nil;v247=911 -(499 + 411);end end end break;end end break;end if ((v215==(0 -0)) or (1769>=((2502 -1203) + 1782))) then local v233=563 -(234 + (1545 -(117 + 1099)));while true do if ((v233==(1 -(0 + 0))) or ((6884 -3592)>=((12893 -(306 + 60)) -9160))) then v215=1;break;end if ((v233==(0 + 0)) or (3044<(3622 -(60 + 1162)))) then v216=0 -0;v217=nil;v233=1;end end end end end break;end end break;end end break;end end else for v170=v88[2],v88[3] do v86[v170]=nil;end end elseif (((1924 + 2171)>(1962 + 682)) and (v89<=(28 -11))) then if ((v89<=(203 -(101 + (329 -241)))) or (177>(4407 -(1335 + 230)))) then if (((34 + 2734)>((2726 -(161 + 68)) -(399 + 1479))) and (v89<=(421 -(174 + (471 -236))))) then v86[v88[2]]();elseif ((3160>=205) and (v89==(28 -15))) then v86[v88[2]]=v86[v88[8 -5]][v88[1859 -(1047 + 808)]];else local v161=0;local v162;local v163;while true do if ((v161==(982 -(141 + (2314 -1474)))) or ((252 + (17053 -12479))==(616 + 694))) then while true do if (((2604 + 834 + 1079)>=(3159 -1156)) and (v162==(76 -(51 + 25)))) then v163=v88[1 + 1];v86[v163]=v86[v163](v13(v86,v163 + (2 -1),v88[1 + 2]));break;end end break;end if (((1409 -(1271 + 138))==v161) or (((3970 -(943 + 699)) -(330 + 378))>=(5380 -(749 + 25)))) then v162=0 -0;v163=nil;v161=2 -1;end end end elseif (((4959 -(880 + 289))>=(6702 -5044)) and (v89<=(8 + 7))) then v86[v88[2]][v88[2 + 1]]=v88[238 -(95 + 139)];elseif ((994==994) and (v89>(5 + 11))) then do return;end elseif (((317 + 425)==(1349 -(195 + 412))) and (v86[v88[2]]==v88[4])) then v71=v71 + (2 -1);else v71=v88[3];end elseif (((3412 + 163)>=(2104 -756)) and (v89<=20)) then if (((101 + 2423)>=(693 -(423 + 111))) and (v89<=(29 -(6 + (9 -4))))) then v86[v88[2]]=v37[v88[2 + 1]];elseif (((4247 -(537 + 467))>(4644 -(87 + 1493))) and (v89>((690 -(70 + 550)) -51))) then v86[v88[5 -3]]=v30(v81[v88[3]],nil,v38);else v86[v88[655 -(4 + 649)]]=v86[v88[5 -2]];end elseif (((2110 -(481 + 654))==(830 + 145)) and (v89<=(73 -52))) then local v138=0;local v139;local v140;local v141;local v142;local v143;local v144;while true do if ((v138==(0 + 0)) or ((6054 -(1190 + 776))>=(1928 + 2488))) then v139=327 -(228 + 99);v140=nil;v138=(1 + 1) -1;end if ((v138==(1389 -(746 + 640))) or ((11381 -7718)<=3489)) then while true do if ((v139==((0 -0) -0)) or ((1893 + 541)<(647 -(11 + 5)))) then local v186=0 + 0;while true do if ((3534==(2716 + 818)) and (0==v186)) then v140=359 -(125 + 234);v141=nil;v186=1;end if (((1106 + 3017)<=(5322 -(556 + 379))) and (v186==(1 + 0))) then v139=1;break;end end end if ((903<(9483 -(5687 -(14 + 42)))) and (v139==(2 + 0))) then v144=nil;while true do if (((4918 -(5 + 133))>=(3725 -(72 + 2124))) and (v140==((1 + 1) -(0 + 0)))) then for v210=v141,v72 do local v211=0;local v212;while true do if ((v211==(0 -(0 -0))) or (((832 + 607) -(400 + 30 + 392))>=(12734 -9294))) then v212=0 -0;while true do if (((7964 -5825)<=(286 + 408 + 3492)) and (v212==(0 -(0 + 0)))) then v144=v144 + 1 + 0;v86[v210]=v142[v144];break;end end break;end end end break;end if (((9885 -6146)==(9760 -6021)) and (v140==(0 -0))) then local v206=470 -(428 + 42);while true do if ((v206==(0 + 0)) or ((2864 -(133 + 218))<=(1598 -1060))) then local v218=324 -((149 -43) + 218);while true do if ((4029>(832 + (1270 -(30 + 16)))) and (v218==(2 -(1399 -(536 + 862))))) then v206=1 + 0;break;end if ((v218==(1639 -(407 + 36 + 1196))) or ((5728 -(592 + 282))<3490)) then v141=v88[282 -(236 + 44)];v142,v143=v83(v86[v141](v13(v86,v141 + (4 -3) + 0,v88[1605 -(1012 + 590)])));v218=1;end end end if (((390 + 4291)==(1069 + 3612)) and (v206==(2 -1))) then v140=3 -2;break;end end end if ((((8064 -2338) -(963 + 1))>(9256 -5987)) and (v140==1)) then local v207=0 -0;while true do if ((((29999 -22364) -4237)<=(3381 + 377)) and (v207==1)) then v140=2;break;end if ((v207==((1221 -(691 + 530)) -0)) or (((3486 -(86 + 25)) -2379)>=(3504 + 721))) then local v219=0 + 0;while true do if (((10380 -5687)>1478) and (v219==((1 + 0) -0))) then v207=1;break;end if (((3162 -(57 + 44))<=3384) and (v219==0)) then v72=(v143 + v141) -(1735 -(1013 + 721));v144=642 -(593 + 49);v219=1 -0;end end end end end end break;end if (((2501 -847)<=(611 + 3225)) and ((1 + 0)==v139)) then v142=nil;v143=nil;v139=2;end end break;end if ((v138==(2 -1)) or (((4869 -(1020 + 477)) + 940)>(3225 + 1292))) then v141=nil;v142=nil;v138=4 -2;end if (((1406 + 850)>(2944 -2100)) and (v138==(571 -(474 + 95)))) then v143=nil;v144=nil;v138=8 -5;end end elseif (((1089 -(761 + 177))==(1626 -(937 + 538))) and (v89==(55 -33))) then local v166=0;local v167;local v168;while true do if ((1042<=(2803 + 1115)) and (v166==1)) then while true do if ((v167==(0 -0)) or ((3014 -(74 + 565))==(2969 -(41 + 42)))) then v168=v88[1780 -(573 + 1205)];v86[v168](v86[v168 + (1 -0)]);break;end end break;end if (((1278 -(25 + 623))<(3220 -(985 + (347 -(142 + 53))))) and (v166==((0 + 0) -0))) then v167=0 -0;v168=nil;v166=1;end end elseif ((v88[2]==v86[v88[1504 -(1473 + 27)]]) or ((6201 -3788)<=(3550 -1727))) then v71=v71 + 1 + 0;else v71=v88[13 -(24 -14)];end v71=v71 + (1089 -(77 + 1011));break;end if ((v93==(0 + 0)) or ((7311 -(21555 -16094))<=(1689 -(1116 + 324)))) then local v107=0 -0;while true do if (((3582 -(99 + 1597))<=(4589 -(272 + 181))) and (v107==(1 + (0 -0)))) then v93=(731 + 73) -(108 + 5 + 222 + 468);break;end if (((2628 + 379)>=((2956 -1999) -(311 + (2072 -(521 + 1173))))) and (v107==(0 + 0))) then v88=v79[v71];v89=v88[2 -1];v107=1 + 0;end end end end break;end end end end A,B=v28(v11(v75));if  not A[1] then local v90=v36[4][v71] or "?";error("Script error at ["   .. v90   .. "]:"   .. A[2]);else return v13(A,2,B);end end;end return v30(v29(),{},v17)();end if (v18==2) then function v23()local v56=0 -0;local v57;local v58;while true do if ((0 + 0)==v56) then v57,v58=v2(v16,v19,v19 + (919 -(888 + 17 + 12)));v19=v19 + (4 -2);v56=2 -(1809 -(1236 + 572));end if (v56==(547 -(397 + 149))) then return (v58 * (275 -(12 + 7))) + v57;end end end v24=nil;function v24()local v59,v60,v61,v62=v2(v16,v19,v19 + 2 + 1);v19=v19 + 4;return (v62 * (5144720 + 11632496)) + (v61 * (45889 + 19647)) + (v60 * 256) + v59;end v25=nil;v18=3;end end end vv9());break;end end end
