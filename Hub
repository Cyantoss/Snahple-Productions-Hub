--[[
 .__Snahp__                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.5b) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==5) then v26=v23;v27=nil;function v27(...)return {...},v11("#",...);end v17=6;end if (v17==2) then function v21()local v38=v1(v15,v18,v18);v18=v18 + 1;return v38;end v22=nil;function v22()local v39=770 -(243 + 527);local v40;local v41;while true do if (v39==(0 -0)) then v40,v41=v1(v15,v18,v18 + 2);v18=v18 + 1 + 1;v39=1 + 0 + 0;end if (v39==(1 -0)) then return (v41 * (135 + (1391 -(1102 + 168)))) + v40;end end end v17=3;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v66=v2(v0(v30,16));if v19 then local v70=0;local v71;while true do if (v70==1) then return v71;end if (0==v70) then v71=v5(v66,v19);v19=nil;v70=1;end end else return v66;end end end);v17=1;end if (v17==6) then v28=nil;function v28()local v42=0;local v43;local v44;local v45;local v46;local v47;local v48;local v49;local v50;local v51;while true do if (v42==(4 -3)) then v45=nil;v46=nil;v42=2;end if (v42==(1865 -(904 + 957))) then v51=nil;while true do if (v43==3) then v50=nil;v51=nil;v43=6 -2;end if (v43~=(2 + 0)) then else v48=nil;v49=nil;v43=3;end if (v43==0) then v44=1363 -(1104 + 259);v45=nil;v43=1 -0;end if (v43~=(1 -0)) then else v46=nil;v47=nil;v43=5 -3;end if (v43==4) then while true do if (1~=v44) then else local v93=0 -0;while true do if (v93==(1 -0)) then v44=2;break;end if (v93==(0 -0)) then v47=nil;v48=nil;v93=1;end end end if (v44==(0 -0)) then local v94=0 -0;while true do if (1==v94) then v44=1;break;end if (v94~=(0 -0)) then else v45=0 + 0;v46=nil;v94=1;end end end if (v44~=2) then else local v95=0 -0;while true do if (v95==0) then v49=nil;v50=nil;v95=1;end if (v95==(1 + 0)) then v44=3;break;end end end if (3==v44) then v51=nil;while true do local v96=386 -(115 + 271);local v97;while true do if (v96==(1824 -(962 + 862))) then v97=0;while true do if (v97==1) then if (v45~=(1 + 1)) then else local v101=0;while true do local v105=0;local v106;while true do if (v105~=0) then else v106=0;while true do if (v106~=(0 + 0)) then else if (v101==(1 + 0)) then local v131=1972 -(759 + 1213);while true do if (v131==(0 + 0)) then for v183=1,v23() do v48[v183]=v23();end return v49;end end end if (v101==(0 -0)) then local v132=0;while true do if (v132~=1) then else v101=1 -0;break;end if (v132==0) then for v185=1896 -(1686 + 209),v23() do local v186=0;local v187;local v188;local v189;while true do if (v186==0) then v187=0;v188=nil;v186=1 + 0;end if (v186~=(1 + 0)) then else v189=nil;while true do if (v187~=0) then else local v214=517 -(68 + 449);while true do if ((140 -(50 + 90))~=v214) then else v188=0 -0;v189=nil;v214=1;end if (v214~=1) then else v187=1;break;end end end if (v187==1) then while true do if (v188~=(0 -0)) then else v189=v21();if (v20(v189,1672 -(1426 + 245),1756 -(1656 + 99))==0) then local v226=0;local v227;local v228;local v229;local v230;local v231;while true do if (v226==0) then v227=0 -0;v228=nil;v226=228 -(220 + 7);end if (v226~=1) then else v229=nil;v230=nil;v226=2;end if (v226==(3 -1)) then v231=nil;while true do if (v227~=(5 -3)) then else while true do if (v228~=(1461 -(641 + 820))) then else local v237=0;while true do if (v237~=1) then else v228=1;break;end if (v237~=0) then else local v246=0;local v247;while true do if (v246==0) then v247=0;while true do if (v247~=1) then else v237=2 -1;break;end if (v247==(0 -0)) then v229=v20(v189,2,3);v230=v20(v189,4,6);v247=1;end end break;end end end end end if (v228==2) then local v238=0;local v239;while true do if (v238==0) then v239=0 + 0;while true do if (v239==(609 -(604 + 5))) then local v249=0;while true do if (v249~=0) then else if (v20(v230,1,1)==(3 -2)) then v231[1632 -(276 + 1354)]=v51[v231[2]];end if (v20(v230,4 -2,955 -(210 + 743))~=(1 + 0)) then else v231[11 -8]=v51[v231[3]];end v249=1;end if (v249==(1 -0)) then v239=939 -(321 + 617);break;end end end if (v239==1) then v228=4 -1;break;end end break;end end end if (v228==(2 -1)) then local v240=0;local v241;while true do if ((0 + 0)==v240) then v241=0;while true do if (v241==(1 + 0)) then v228=2;break;end if (v241~=(0 -0)) then else local v250=0;while true do if (v250~=1) then else v241=1;break;end if (v250~=0) then else v231={v22(),v22(),nil,nil};if (v229==0) then local v253=1934 -(1154 + 780);while true do if (v253==(0 -0)) then v231[3]=v22();v231[4]=v22();break;end end elseif (v229==(1 + 0)) then v231[3]=v23();elseif (v229==2) then v231[3]=v23() -(2^16);elseif (v229~=3) then else local v258=0;while true do if (v258==(0 -0)) then v231[3]=v23() -(2^(2 + 14));v231[167 -(125 + 38)]=v22();break;end end end v250=1;end end end end break;end end end if (v228==(2 + 1)) then if (v20(v230,3,3)==(2 -1)) then v231[4]=v51[v231[1923 -(1835 + 84)]];end v46[v185]=v231;break;end end break;end if (v227~=1) then else local v233=1467 -(585 + 882);local v234;while true do if (v233==0) then v234=0 + 0;while true do if (v234==(1545 -(1390 + 154))) then v227=2 + 0;break;end if (v234==(0 + 0)) then local v248=0 -0;while true do if (v248~=(0 -0)) then else v230=nil;v231=nil;v248=1;end if (v248==(1 + 0)) then v234=3 -2;break;end end end end break;end end end if (v227==0) then local v235=0 + 0;while true do if (v235==(1 -0)) then v227=1 + 0;break;end if (v235==(0 + 0)) then v228=143 -(110 + 33);v229=nil;v235=239 -(56 + 182);end end end end break;end end end break;end end break;end end break;end end end for v190=1,v23() do v47[v190-(1 + 0)]=v28();end v132=1;end end end break;end end break;end end end end break;end if (v97~=(0 -0)) then else if (v45==1) then local v102=0 + 0;local v103;while true do if (v102==(417 -(276 + 141))) then v103=0;while true do if (v103~=0) then else v50=v23();v51={};v103=830 -(702 + 127);end if ((159 -(33 + 124))==v103) then v45=2;break;end if (v103~=1) then else for v111=2 -1,v50 do local v112=0 -0;local v113;local v114;local v115;local v116;while true do if (v112==1) then v115=nil;v116=nil;v112=2;end if (v112==(1690 -(1199 + 489))) then while true do if (v113~=(1328 -(158 + 1169))) then else v116=nil;while true do if (v114==0) then local v203=0 -0;while true do if (v203==(1 + 0)) then v114=923 -(921 + 1);break;end if ((0 + 0)~=v203) then else v115=v21();v116=nil;v203=2 -1;end end end if (v114~=1) then else if (v115==1) then v116=v21()~=0;elseif (v115==(1597 -(620 + 975))) then v116=v24();elseif (v115==(13 -10)) then v116=v25();end v51[v111]=v116;break;end end break;end if ((0 + 0)==v113) then v114=0 -0;v115=nil;v113=718 -(629 + 88);end end break;end if (v112==(0 + 0)) then v113=0 -0;v114=nil;v112=1;end end end v49[3]=v21();v103=2;end end break;end end end if (v45==(0 -0)) then local v104=1763 -(564 + 1199);while true do if (v104==0) then local v108=0 + 0;local v109;while true do if (v108~=(0 -0)) then else v109=0;while true do if (v109==(0 + 0)) then v46={};v47={};v109=522 -(460 + 61);end if ((256 -(201 + 54))==v109) then v104=1;break;end end break;end end end if ((3 -2)~=v104) then else v48={};v49={v46,v47,nil,v48};v104=1175 -(784 + 389);end if (v104==2) then v45=1741 -(1250 + 490);break;end end end v97=1;end end break;end end end break;end end break;end end break;end if (v42~=(0 -0)) then else v43=529 -(467 + 62);v44=nil;v42=1;end if (2~=v42) then else v47=nil;v48=nil;v42=3;end if (v42~=(2 + 1)) then else v49=nil;v50=nil;v42=9 -5;end end end v29=nil;v17=7;end if (v17==1) then v20=nil;function v20(v31,v32,v33)if v33 then local v67=676 -(293 + 383);local v68;while true do if (v67==(0 + 0)) then v68=(v31/((520 -(73 + 445))^(v32-(165 -(24 + 140)))))%((6 -4)^(((v33-((2 + 0) -1)) -(v32-(1 + 0))) + (1 -0)));return v68-(v68%(1 + (511 -(293 + 218))));end end else local v69=2^(v32-(1745 -(1254 + 490)));return (((v31%(v69 + v69))>=v69) and ((1 -0) + 0)) or (921 -(761 + 160));end end v21=nil;v17=2;end if (7==v17) then function v29(v34,v35,v36)local v52=0;local v53;local v54;local v55;while true do if (v52==1) then v55=v34[3];return function(...)local v72=1;local v73= -1;local v74={...};local v75=v11("#",...) -1;local function v76()local v77=v53;local v78=Const;local v79=v54;local v80=v55;local v81=v27;local v82={};local v83={};local v84={};for v89=0,v75 do if (((1291 -509)==(1985 -(1199 + 4))) and (v89>=v80)) then v82[v89-v80]=v74[v89 + 1];else v84[v89]=v74[v89 + (1 -0)];end end local v85=(v75-v80) + 1 + 0;local v86;local v87;while true do local v90=0 -0;local v91;local v92;while true do if (((1431 + 2362)==3793) and (v90==1)) then while true do if (((2438 -(726 + (1532 -(356 + 777))))==(1859 -546)) and (v91==(0 + 0))) then v92=0 + 0;while true do if ((v92==(0 + 0)) or ((5112 -(363 + 3312))>2726)) then local v100=0 + (193 -(21 + 172));while true do if ((v100==1) or ((2647 -(167 + 14))<(539 + 120))) then v92=3 -2;break;end if (((2301 -(39 + 63))==(1225 + 974)) and (v100==((0 + 0) -0))) then local v107=0;while true do if (((7584 -(5406 -(904 + 566)))>1652) and (v107==(1 -(0 -0)))) then v100=1;break;end if ((4027>=(4647 -3076)) and (v107==(1878 -(90 + 1788)))) then v86=v77[v72];v87=v86[1 + 0];v107=(1651 -(846 + 804)) + 0;end end end end end if ((v92==(1 + 0)) or ((3237 -(13 + (468 -323)))==2762)) then if (((22 + 167)<(1212 + 725 + 341)) and (v87<=(25 -14))) then if (((4958 -3136)>(2445 -1207)) and (v87<=((676 -(292 + 379)) + 0))) then if (((8 + 309 + 1711)==(3015 -987)) and (v87<=((2 + 2) -2))) then if ((v87<=(1916 -(1393 + 523))) or ((3564 + 616)<(4487 -(199 + 153)))) then v84[v86[2]]=v29(v79[v86[5 -2]],nil,v36);elseif ((v87==(1 -0)) or (1537==(161 + 820))) then local v133=0 + 0;local v134;local v135;while true do if ((v133==(0 -0)) or (3497>=(7891 -(5686 -(695 + 1066))))) then local v172=0 -0;while true do if (((2625 -(546 + 839))<=(462 + (4715 -2647))) and ((1 -0)==v172)) then v133=2 -1;break;end if ((((307 -192) + 78)==(148 + 45)) and (v172==((0 -0) + 0))) then v134=0;v135=nil;v172=1 -0;end end end if (((2867 -1724)>(507 -317)) and (v133==1)) then while true do if ((v134==(0 + 0)) or ((2719 -(19 + 1078))>=(10102 -5230))) then v135=v86[2 + 0];v84[v135](v12(v84,v135 + 1,v86[8 -(10 -5)]));break;end end break;end end else local v136=0 + 0;local v137;local v138;local v139;local v140;while true do if ((v136==(567 -((905 -492) + 153))) or (369>=3041)) then local v173=0 + 0;while true do if (((3618 -2669)==(724 + 225)) and (v173==((40 -(13 + 26)) + 0))) then v136=187 -(32 + 153);break;end if ((v173==(0 -0)) or ((12384 -8271)<=(528 + 797 + 2486))) then v73=(v139 + v137) -1;v140=0;v173=1;end end end if ((v136==0) or (4916<2250)) then v137=v86[5 -3];v138,v139=v81(v84[v137](v12(v84,v137 + (454 -((664 -(226 + 138)) + 153)),v86[2 + 1])));v136=1 + (726 -(405 + 321));end if ((3379<(3934 + 513)) and (v136==(459 -(374 + 83)))) then for v192=v137,v73 do local v193=0 -0;local v194;while true do if ((v193==(1283 -(481 + 591 + 211))) or (135==(2040 + 1259 + 310))) then v194=0;while true do if (((0 + 0)==v194) or ((635 + 447)>(11778 -7859))) then v140=v140 + (179 -(113 + 65));v84[v192]=v138[v140];break;end end break;end end end break;end end end elseif ((v87<=(1298 -(311 + 610 + 374))) or ((2466 -1784)<(5 + 449))) then v84[v86[2]]();elseif ((v87==(13 -9)) or (3842>(5606 -(1139 + 558)))) then local v141=0;local v142;while true do if (((8352 -5008)>=964) and ((0 -0)==v141)) then v142=v86[2 + 0];v84[v142](v84[v142 + 1]);break;end end else v72=v86[4 -1];end elseif (((575 + 1820)==(6946 -4551)) and (v87<=(4 + 4))) then if (((4995 -(1912 + 72))>=(53 + 19)) and (v87<=(11 -(984 -(190 + 789))))) then local v118=0 + 0;local v119;local v120;local v121;while true do if ((v118==(0 -0)) or ((1694 + 2169)<=(2220 + 1483))) then v119=v79[v86[(3 -1) + (1739 -(921 + 817))]];v120=nil;v118=1097 -(223 + 873);end if (((692 -300)<=448) and (v118==(1944 -(1854 + 89)))) then v121={};v120=v9({},{__index=function(v163,v164)local v174=1617 -(166 + (3851 -2400));local v175;local v176;while true do if ((v174==0) or ((5246 -2105)<=(2951 -1566))) then v175=0 -(0 -0);v176=nil;v174=1369 -(402 + 966);end if ((984==(530 + 454)) and (v174==(1 + 0))) then while true do if ((v175==(0 + 0 + 0)) or ((151 + 179)==(3878 -1698))) then local v212=0 + 0;while true do if ((v212==0) or ((19 + 6)>=(4875 -(777 + 846)))) then v176=v121[v164];return v176[2 -(508 -(34 + 473))][v176[1 + 1]];end end end end break;end end end,__newindex=function(v165,v166,v167)local v177=0 + 0;local v178;local v179;local v180;while true do if ((v177==(0 + 0 + 0)) or ((2141 -(369 + 666 + 39))>=((1663 -693) + (1746 -1149)))) then v178=0 + 0;v179=nil;v177=2 -1;end if (((1932 + 3010)>(6662 -2660)) and (v177==1)) then v180=nil;while true do if ((2259<(5060 -1243)) and (v178==0)) then local v213=914 -(626 + 288);while true do if ((v213==(0 + 0)) or ((277 -(129 + 25))>(752 + 354 + 622))) then v179=0 + (0 -0);v180=nil;v213=1;end if ((v213==(1 + 0 + 0)) or ((4061 -(869 + 54))>=(6041 -2365))) then v178=2 -1;break;end end end if (((3423 -(286 + 357))>=(327 + 386)) and (v178==(4 -3))) then while true do if (((7767 -(1064 + 3899))<(1469 + 2904)) and (v179==(0 -0))) then v180=v121[v166];v180[392 -(280 + 111)][v180[1494 -(835 + 657)]]=v167;break;end end break;end end break;end end end});v118=961 -(74 + 885);end if ((v118==(2 + 0)) or ((1172 -(298 + 521))>=(2607 + 1865))) then for v168=1184 -(200 + (3193 -2210)),v86[441 -(142 + 295)] do local v169=0 -0;local v170;local v171;while true do if (((1 + 0)==v169) or (((1795 -(600 + 374)) + 264)==859)) then while true do if (((0 + 0)==v170) or ((1758 -1006)>4246)) then local v210=(4513 -3306) -(26 + 1181);while true do if (((5304 -(1052 + 610))==(4520 -(56 + 822))) and (v210==(0 -0))) then v72=v72 + (399 -(247 + 151));v171=v77[v72];v210=(1 -0) + 0;end if (((1 -0)==v210) or (4140<(4353 -(520 + 361)))) then v170=1 + 0;break;end end end if ((v170==(4 -3)) or ((13689 -8935)<=(8477 -5638))) then if (((961 + 3605)>=4412) and (v171[850 -(645 + 204)]==23)) then v121[v168-((1 -0) + 0)]={v84,v171[3]};else v121[v168-(1 + 0)]={v35,v171[1 + 2]};end v83[ #v83 + (1 -0)]=v121;break;end end break;end if (((4838 -(122 + 308))>=1516) and (v169==(0 -0))) then v170=779 -(321 + 186 + 272);v171=nil;v169=1 + 0;end end end v84[v86[6 -4]]=v29(v119,v120,v36);break;end end elseif ((v87==(7 + 0)) or (((1516 + 4126) -3940)<=(1274 -(520 + 394)))) then v84[v86[(2546 -(1109 + 175)) -(360 + 800 + 100)]][v86[715 -(384 + 328)]]=v84[v86[13 -9]];else v84[v86[2]][v86[1575 -(1478 + 94)]]=v86[540 -(233 + 303)];end elseif (((7988 -3031)>71) and (v87<=(1692 -(319 + 1364)))) then v84[v86[1520 -(58 + 1460)]]=v84[v86[11 -(22 -14)]][v86[(2 -0) + 2]];elseif ((v87>10) or ((238 + 133)>=(2146 -(496 + 83)))) then local v145=0 -0;local v146;local v147;while true do if (((12736 -9053)<(7453 -3560)) and (v145==(1 + 0))) then while true do if (((0 + 0)==v146) or ((1820 -(98 + (27 -6)))>(1981 + 2915))) then v147=v86[4 -2];v84[v147]=v84[v147]();break;end end break;end if (((0 + 0)==v145) or ((1651 -(128 + 307))>(64 + 2362))) then local v181=0 -0;while true do if (((1 + (0 -0))==v181) or ((5238 -(2277 + 1842))>(1909 + 614))) then v145=1804 -((3821 -2895) + 877);break;end if ((v181==(991 -((2006 -(939 + 483)) + 407))) or (1864==((1843 -912) + 329))) then v146=(241 -(80 + 161)) + 0;v147=nil;v181=45 -(28 + 16);end end end end else v84[v86[1 + 1]]=v86[2 + (1 -0)]~=(0 + 0);end elseif (((3893 + 541)>1175) and (v87<=17)) then if ((((58 -24) + 366)<=(5633 -(927 + 519))) and (v87<=(12 + 2))) then if (((2279 + 1509)<(5059 -((3097 -2260) + 133))) and (v87<=((1 -0) + 11))) then v84[v86[7 -5]]=v86[3 + 0];elseif (((796 -(65 + 74))<=(372 + 817)) and (v87==(3 + 10))) then do return;end else local v149=0 + 0;local v150;local v151;local v152;while true do if ((((3665 -(113 + 40)) -(25 + 306))<=3842) and (v149==(1 + 0))) then v152=nil;while true do if (((4052 -874)<=(559 + 413 + 2263)) and (v150==0)) then local v197=0 + 0;local v198;while true do if (((150 + 133)<(90 + 2597)) and (v197==(0 + 0))) then v198=481 -(321 + 160);while true do if ((v198==(0 -0)) or ((3188 + 284)>=(5532 -1280))) then local v219=0 -(0 -0);while true do if (((1399 -(256 + 178))<(3274 -(252 + 258))) and (1==v219)) then v198=3 -2;break;end if (((5237 -(277 + 358))>(92 + 413)) and (v219==(0 + 0))) then v151=v86[6 -4];v152=v84[v86[3 + 0]];v219=1 + 0;end end end if (((1656 -513)<2363) and (v198==(1 -0))) then v150=1 + 0;break;end end break;end end end if (((4449 + 48)==(529 + 3968)) and (v150==(1 -0))) then v84[v151 + (1950 -(1435 + 335 + 179))]=v152;v84[v151]=v152[v86[9 -5]];break;end end break;end if ((v149==0) or ((3344 -(2016 -(8 + 7)))<(2667 -(1076 + 851)))) then local v182=0 -0;while true do if ((1==v182) or (3398==(13093 -8730))) then v149=1;break;end if ((v182==(1554 -(1430 + 124))) or ((3490 -(4 + 20))<2605)) then v150=0;v151=nil;v182=(2 -1) -0;end end end end end elseif ((v87<=(25 -10)) or ((15156 -10784)<=(11715 -8640))) then for v129=v86[2],v86[5 -2] do v84[v129]=nil;end elseif (((1294 + 874 + 223)<((1130 + 2637) -(186 + 258))) and (v87==(730 -(623 + 91)))) then v84[v86[2 -0]]=v36[v86[3]];else local v154=1739 -(374 + 1365);local v155;local v156;while true do if ((1005==(1519 -(434 + 80))) and (v154==(0 + 0))) then v155=0 + 0;v156=nil;v154=1 + 0;end if (((244 + 522)<(9602 -7491)) and (v154==(1 + 0))) then while true do if ((0==v155) or (3047<=(58 + 259))) then v156=v86[5 -3];v84[v156]=v84[v156](v12(v84,v156 + (3 -(1 + 1)),v86[2 + 1]));break;end end break;end end end elseif ((v87<=(19 + 1)) or ((5084 -1943)<=2941)) then if (((632 + 2002)>=(441 + 1321)) and (v87<=18)) then v84[v86[6 -4]]=v35[v86[2 + 1]];elseif ((v87==(16 + 3)) or (3747<=1459)) then local v157=0 + 0 + 0;local v158;local v159;local v160;while true do if ((v157==((1030 -(221 + 252)) -((337 -205) + 425))) or ((2615 -570)>(3893 -(119 + 207)))) then v158=0 + 0;v159=nil;v157=1 -0;end if (((1 + 0)==v157) or ((11828 -8287)>(20357 -(15903 -(122 + 102))))) then v160=nil;while true do if ((v158==1) or ((1280 -(780 + 232 + 31))>=(661 + 1415))) then for v205=1664 -(1416 + 247), #v83 do local v206=0 + 0 + 0;local v207;local v208;while true do if ((v206==(0 -0)) or ((2211 -(2303 -(830 + 418)))>(1734 -(175 + 26 + 334)))) then v207=0 -0;v208=nil;v206=(4153 -2332) -(1079 + 741);end if ((3960>=2757) and ((1 + 0)==v206)) then while true do if ((1629==1629) and (v207==(73 -(14 + 59)))) then v208=v83[v205];for v220=0 -0, #v208 do local v221=0 -0;local v222;local v223;local v224;local v225;while true do if (((4471 -(482 + 1242))>=(1293 -729)) and ((337 -(73 + 264))==v221)) then v222=0 -0;v223=nil;v221=1650 -(345 + 1304);end if ((v221==(3 -2)) or (2453<=(2287 -(393 + 617)))) then v224=nil;v225=nil;v221=(1 -0) + 1;end if ((v221==((1 -0) + 1)) or ((4455 -(11 + 129))<1446)) then while true do if ((v222==(1 + 0)) or ((12681 -8219)<(90 + 179))) then v225=v223[600 -(300 + 55 + 243)];if ((((955 + 6759) -4604)==((4412 -1666) + 364)) and (v224==v84) and (v225>=v159)) then local v236=0;while true do if ((v236==(0 -(0 -0))) or ((3512 -(1100 + 676))<(236 -(119 -67)))) then v160[v225]=v224[v225];v223[1 + 0]=v160;break;end end end break;end if (((5453 -3590)<(5379 -(415 + 229 + 69))) and (v222==((581 + 32) -(58 + 555)))) then local v232=0 -0;while true do if (((5044 -(148 + 43))>333) and ((2 -1)==v232)) then v222=1;break;end if ((v232==(0 -0)) or (3848>=(1442 + 3341))) then v223=v208[v220];v224=v223[1];v232=935 -(264 + 670);end end end end break;end end end break;end end break;end end end break;end if ((2619==2619) and (v158==(108 -(55 + 53)))) then local v202=0;while true do if ((v202==(890 -(830 + 60))) or ((1259 + 1194)<=(4457 -2862))) then v159=v86[2 + 0];v160={};v202=1 -0;end if ((v202==(12 -(8 + 3))) or (((2786 + 777) -1387)<(90 + 60))) then v158=(953 + 171) -(57 + 1066);break;end end end end break;end end elseif (((3223 -((1726 -(267 + 691)) + 270))>=669) and (v84[v86[1 + 1]]==v86[4])) then v72=v72 + 1 + 0;else v72=v86[13 -10];end elseif ((v87<=(1867 -(1777 + 69))) or (((3944 -2331) -(32 + (189 -92)))<(1388 -443))) then local v125=(3871 -(711 + 1170)) -(1457 + 533);local v126;local v127;local v128;while true do if ((1==v125) or ((85 + 908)>=(447 + 2009))) then v128=nil;while true do if ((v126==0) or (1887>3496)) then local v195=1482 -(1112 + 370);while true do if (((3724 -((1434 -(648 + 665)) + 1838))<(5756 -(273 + 1327))) and (v195==(0 -0))) then v127=0 + 0;v128=nil;v195=1 + 0;end if ((v195==1) or ((1261 + 856)<((844 -(162 + 151)) + 654))) then v126=1;break;end end end if ((2235<=(8469 -5486)) and (v126==(3 -(1065 -(213 + 850))))) then while true do if (((4193 -(459 + 642))>=(1615 + 424)) and (0==v127)) then v128=v86[6 -4];v84[v128]=v84[v128](v12(v84,v128 + (108 -(12 + 95)),v73));break;end end break;end end break;end if ((v125==(0 + 0)) or ((15438 -(11327 -(36 + 6)))==(1987 + 1449))) then v126=0;v127=nil;v125=1124 -(177 + 946);end end elseif (((4265 -2891)<(4680 -(651 + 585))) and (v87==(11 + 11))) then if ((v86[2 + (0 -0)]==v84[v86[3 + 1]]) or (((1196 -772) + 646)>2810)) then v72=v72 + (2 -1);else v72=v86[3];end else v84[v86[9 -7]]=v84[v86[1 + 2]];end v72=v72 + (1767 -(1555 + 211));break;end end break;end end break;end if ((v90==0) or ((4751 -3096)>(4981 -(577 + (1920 -(1666 + 91)))))) then v91=0 -0;v92=nil;v90=1 + (245 -(186 + 59));end end end end A,B=v27(v10(v76));if  not A[1] then local v88=v34[4][v72] or "?";error("Script error at ["   .. v88   .. "]:"   .. A[2]);else return v12(A,2,B);end end;end if (v52==0) then v53=v34[1];v54=v34[2];v52=1;end end end return v29(v28(),{},v16)();end if (v17==3) then v23=nil;function v23()local v56,v57,v58,v59=v1(v15,v18,v18 + 3);v18=v18 + (913 -(286 + 626)) + 3 + 0;return (v59 * (36434927 -19657711)) + (v58 * ((238708 -171253) -(1110 + 809))) + (v57 * (863 -607)) + v56;end v24=nil;v17=4;end if (4==v17) then function v24()local v60=v23();local v61=v23();return (( -(733 -(457 + 274)) * v20(v61,76 -44)) + 1 + 0 + 0) * ((1785 -(621 + 1162))^(v20(v61,61 -40,31) -(655 + 323 + 45))) * ((((v20(v61,1 + 0,20) * ((880 -(695 + 183))^(19 + 13))) + v60)/((632 -(615 + (1516 -(243 + 1258))))^(527 -(63 + 412)))) + 1);end v25=nil;function v25(v37)local v62;if  not v37 then v37=v23();if (v37==0) then return "";end end v62=v3(v15,v18,(v18 + v37) -(1291 -(852 + 438)));v18=v18 + v37;local v63={};for v64=4 -3, #v62 do v63[v64]=v2(v1(v3(v62,v64,v64)));end return v6(v63);end v17=5;end end end vv8());end
